---
export interface Props {
  deviceFilter?: deviceFilterTypes;
}

enum deviceFilterTypes {
  VIDEOINPUT = "videoinput",
  AUDIOINPUT = "audioinput",
  AUDIOOUTPUT = "audiooutput",
}

const { deviceFilter = deviceFilterTypes.VIDEOINPUT } = Astro.props;
---

<select
  id="cameraSelector"
  class="form-select form-select-sm"
  data-filter={deviceFilter}
>
</select>

<script>
  function updateOptions(ele: HTMLSelectElement) {
    navigator.mediaDevices.enumerateDevices().then((devices) => {
      devices
        .filter((device) => device.kind === ele.dataset.filter)
        .forEach((camera, index) => {
          const option = document.createElement("option");
          option.value = camera.deviceId;
          option.label = camera.label === "" ? `Camera ${index}` : camera.label;
          option.selected = index === 0 ? true : false;
          option.innerHTML = camera.label;
          ele.appendChild(option);
        });
    });
  }

  const select = document.querySelector("select");

  if (select) {
    updateOptions(select);
    navigator.mediaDevices.addEventListener("devicechange", (event) =>
      updateOptions(select)
    );
  } else {
    console.error("Select tag cant be found");
  }
</script>
